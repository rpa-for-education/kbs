name: Run KBS Script Daily

on:
  schedule:
    - cron: '30 20 * * *'  # 03:30 Viá»‡t Nam
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform (start)'
        required: true
        default: 'start'

jobs:
  run-script:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      TF_CPP_MIN_LOG_LEVEL: "3"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libblas-dev liblapack-dev

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          pip install tensorflow==2.17.0 -v
          pip install -r requirements.txt || echo "Dependency installation failed, trying relaxed versions..."
          pip install numpy==1.26.4 -r requirements.txt || exit 1

      - name: Check dependency conflicts
        run: |
          pip check || echo "Dependency check failed, proceeding with caution..."

      - name: Verify script
        run: |
          grep "embedding_cache = {}" rpakbs.py || (echo "Error: embedding_cache not found in rpakbs.py" && exit 1)

      - name: Run Script
        run: |
          if [ "${{ github.event.inputs.action }}" = "start" ]; then
            echo "Starting bot..."
            python rpakbs.py | tee script_output.log
          else
            echo "Invalid action: ${{ github.event.inputs.action }}"
            exit 1
          fi

      - name: Save skipped content
        if: github.event.inputs.action == 'start'
        run: |
          if [ -f skipped_content.log ]; then
            echo "Saving skipped content log..."
            mv skipped_content.log skipped_content_$(date +%F_%H-%M-%S).log
          fi

      - name: Commit processed items
        if: github.event.inputs.action == 'start'
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          if [ -f processed_items.json ]; then
            git add processed_items.json
            git commit -m "Update processed_items.json" || echo "No changes to commit."
            git push
          else
            echo "No processed_items.json found, skipping commit."
          fi

      - name: Upload script output
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: script-output
          path: |
            script_output.log
            skipped_content_*.log